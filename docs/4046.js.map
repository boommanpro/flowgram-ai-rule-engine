{"version":3,"file":"4046.js","sources":["webpack://@flowgram.ai/demo-free-layout/./node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/editor/common/services/treeSitterParserService.js","webpack://@flowgram.ai/demo-free-layout/./node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/platform/instantiation/common/instantiation.js"],"sourcesContent":["import { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ITreeSitterParserService = createDecorator('treeSitterParserService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// ------ internal util\nexport var _util;\n(function (_util) {\n    _util.serviceIds = new Map();\n    _util.DI_TARGET = '$di$target';\n    _util.DI_DEPENDENCIES = '$di$dependencies';\n    function getServiceDependencies(ctor) {\n        return ctor[_util.DI_DEPENDENCIES] || [];\n    }\n    _util.getServiceDependencies = getServiceDependencies;\n})(_util || (_util = {}));\nexport const IInstantiationService = createDecorator('instantiationService');\nfunction storeServiceDependency(id, target, index) {\n    if (target[_util.DI_TARGET] === target) {\n        target[_util.DI_DEPENDENCIES].push({ id, index });\n    }\n    else {\n        target[_util.DI_DEPENDENCIES] = [{ id, index }];\n        target[_util.DI_TARGET] = target;\n    }\n}\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator(serviceId) {\n    if (_util.serviceIds.has(serviceId)) {\n        return _util.serviceIds.get(serviceId);\n    }\n    const id = function (target, key, index) {\n        if (arguments.length !== 3) {\n            throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n        }\n        storeServiceDependency(id, target, index);\n    };\n    id.toString = () => serviceId;\n    _util.serviceIds.set(serviceId, id);\n    return id;\n}\n"],"names":["ITreeSitterParserService","_util","Map","ctor","IInstantiationService","createDecorator","serviceId","id","target","key","index","arguments","Error"],"mappings":"sMACO,IAAMA,EAA2B,G,SAAA,IAAgB,0B,4BCI7CC,EACAA,E,oCACPA,CADOA,EAQRA,GAAUA,CAAAA,EAAQ,CAAC,IAPZ,UAAU,CAAG,IAAIC,IACvBD,EAAM,SAAS,CAAG,aAClBA,EAAM,eAAe,CAAG,mBAIxBA,EAAM,sBAAsB,CAH5B,SAAgCE,CAAI,EAChC,OAAOA,CAAI,CAACF,EAAM,eAAe,CAAC,EAAI,EAAE,AAC5C,EAGG,IAAMG,EAAwBC,EAAgB,wBAa9C,SAASA,EAAgBC,CAAS,EACrC,GAAIL,EAAM,UAAU,CAAC,GAAG,CAACK,GACrB,OAAOL,EAAM,UAAU,CAAC,GAAG,CAACK,GAEhC,IAAMC,EAAK,SAAUC,CAAM,CAAEC,CAAG,CAAEC,CAAK,EACnC,GAAIC,AAAqB,GAArBA,UAAU,MAAM,CAChB,MAAM,AAAIC,MAAM,mEAjBpBJ,CAmB2BA,CAnBrB,CAACP,EAAM,SAAS,CAAC,GAmBIO,EAlB3BA,AAkB2BA,CAlBrB,CAACP,EAAM,eAAe,CAAC,CAAC,IAAI,CAAC,CAAEM,GAkBdA,EAlBkBG,MAkBNA,CAlBY,IAG/CF,AAe2BA,CAfrB,CAACP,EAAM,eAAe,CAAC,CAAG,CAAC,CAAEM,GAeZA,EAfgBG,MAeJA,CAfU,EAAE,CAC/CF,AAc2BA,CAdrB,CAACP,EAAM,SAAS,CAAC,CAcIO,EAC/B,EAGA,OAFAD,EAAG,QAAQ,CAAG,IAAMD,EACpBL,EAAM,UAAU,CAAC,GAAG,CAACK,EAAWC,GACzBA,CACX,C"}