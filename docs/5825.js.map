{"version":3,"file":"5825.js","sources":["webpack://@flowgram.ai/demo-free-layout/./node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/base/common/themables.js","webpack://@flowgram.ai/demo-free-layout/./node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/editor/common/services/getIconClasses.js","webpack://@flowgram.ai/demo-free-layout/./node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/platform/files/common/files.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Codicon } from './codicons.js';\nexport var ThemeColor;\n(function (ThemeColor) {\n    function isThemeColor(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string';\n    }\n    ThemeColor.isThemeColor = isThemeColor;\n})(ThemeColor || (ThemeColor = {}));\nexport var ThemeIcon;\n(function (ThemeIcon) {\n    ThemeIcon.iconNameSegment = '[A-Za-z0-9]+';\n    ThemeIcon.iconNameExpression = '[A-Za-z0-9-]+';\n    ThemeIcon.iconModifierExpression = '~[A-Za-z]+';\n    ThemeIcon.iconNameCharacter = '[A-Za-z0-9~-]';\n    const ThemeIconIdRegex = new RegExp(`^(${ThemeIcon.iconNameExpression})(${ThemeIcon.iconModifierExpression})?$`);\n    function asClassNameArray(icon) {\n        const match = ThemeIconIdRegex.exec(icon.id);\n        if (!match) {\n            return asClassNameArray(Codicon.error);\n        }\n        const [, id, modifier] = match;\n        const classNames = ['codicon', 'codicon-' + id];\n        if (modifier) {\n            classNames.push('codicon-modifier-' + modifier.substring(1));\n        }\n        return classNames;\n    }\n    ThemeIcon.asClassNameArray = asClassNameArray;\n    function asClassName(icon) {\n        return asClassNameArray(icon).join(' ');\n    }\n    ThemeIcon.asClassName = asClassName;\n    function asCSSSelector(icon) {\n        return '.' + asClassNameArray(icon).join('.');\n    }\n    ThemeIcon.asCSSSelector = asCSSSelector;\n    function isThemeIcon(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string' && (typeof obj.color === 'undefined' || ThemeColor.isThemeColor(obj.color));\n    }\n    ThemeIcon.isThemeIcon = isThemeIcon;\n    const _regexFromString = new RegExp(`^\\\\$\\\\((${ThemeIcon.iconNameExpression}(?:${ThemeIcon.iconModifierExpression})?)\\\\)$`);\n    function fromString(str) {\n        const match = _regexFromString.exec(str);\n        if (!match) {\n            return undefined;\n        }\n        const [, name] = match;\n        return { id: name };\n    }\n    ThemeIcon.fromString = fromString;\n    function fromId(id) {\n        return { id };\n    }\n    ThemeIcon.fromId = fromId;\n    function modify(icon, modifier) {\n        let id = icon.id;\n        const tildeIndex = id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            id = id.substring(0, tildeIndex);\n        }\n        if (modifier) {\n            id = `${id}~${modifier}`;\n        }\n        return { id };\n    }\n    ThemeIcon.modify = modify;\n    function getModifier(icon) {\n        const tildeIndex = icon.id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            return icon.id.substring(tildeIndex + 1);\n        }\n        return undefined;\n    }\n    ThemeIcon.getModifier = getModifier;\n    function isEqual(ti1, ti2) {\n        return ti1.id === ti2.id && ti1.color?.id === ti2.color?.id;\n    }\n    ThemeIcon.isEqual = isEqual;\n})(ThemeIcon || (ThemeIcon = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Schemas } from '../../../base/common/network.js';\nimport { DataUri } from '../../../base/common/resources.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nimport { FileKind } from '../../../platform/files/common/files.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nconst fileIconDirectoryRegex = /(?:\\/|^)(?:([^\\/]+)\\/)?([^\\/]+)$/;\nexport function getIconClasses(modelService, languageService, resource, fileKind, icon) {\n    if (ThemeIcon.isThemeIcon(icon)) {\n        return [`codicon-${icon.id}`, 'predefined-file-icon'];\n    }\n    if (URI.isUri(icon)) {\n        return [];\n    }\n    // we always set these base classes even if we do not have a path\n    const classes = fileKind === FileKind.ROOT_FOLDER ? ['rootfolder-icon'] : fileKind === FileKind.FOLDER ? ['folder-icon'] : ['file-icon'];\n    if (resource) {\n        // Get the path and name of the resource. For data-URIs, we need to parse specially\n        let name;\n        if (resource.scheme === Schemas.data) {\n            const metadata = DataUri.parseMetaData(resource);\n            name = metadata.get(DataUri.META_DATA_LABEL);\n        }\n        else {\n            const match = resource.path.match(fileIconDirectoryRegex);\n            if (match) {\n                name = cssEscape(match[2].toLowerCase());\n                if (match[1]) {\n                    classes.push(`${cssEscape(match[1].toLowerCase())}-name-dir-icon`); // parent directory\n                }\n            }\n            else {\n                name = cssEscape(resource.authority.toLowerCase());\n            }\n        }\n        // Root Folders\n        if (fileKind === FileKind.ROOT_FOLDER) {\n            classes.push(`${name}-root-name-folder-icon`);\n        }\n        // Folders\n        else if (fileKind === FileKind.FOLDER) {\n            classes.push(`${name}-name-folder-icon`);\n        }\n        // Files\n        else {\n            // Name & Extension(s)\n            if (name) {\n                classes.push(`${name}-name-file-icon`);\n                classes.push(`name-file-icon`); // extra segment to increase file-name score\n                // Avoid doing an explosive combination of extensions for very long filenames\n                // (most file systems do not allow files > 255 length) with lots of `.` characters\n                // https://github.com/microsoft/vscode/issues/116199\n                if (name.length <= 255) {\n                    const dotSegments = name.split('.');\n                    for (let i = 1; i < dotSegments.length; i++) {\n                        classes.push(`${dotSegments.slice(i).join('.')}-ext-file-icon`); // add each combination of all found extensions if more than one\n                    }\n                }\n                classes.push(`ext-file-icon`); // extra segment to increase file-ext score\n            }\n            // Detected Mode\n            const detectedLanguageId = detectLanguageId(modelService, languageService, resource);\n            if (detectedLanguageId) {\n                classes.push(`${cssEscape(detectedLanguageId)}-lang-file-icon`);\n            }\n        }\n    }\n    return classes;\n}\nfunction detectLanguageId(modelService, languageService, resource) {\n    if (!resource) {\n        return null; // we need a resource at least\n    }\n    let languageId = null;\n    // Data URI: check for encoded metadata\n    if (resource.scheme === Schemas.data) {\n        const metadata = DataUri.parseMetaData(resource);\n        const mime = metadata.get(DataUri.META_DATA_MIME);\n        if (mime) {\n            languageId = languageService.getLanguageIdByMimeType(mime);\n        }\n    }\n    // Any other URI: check for model if existing\n    else {\n        const model = modelService.getModel(resource);\n        if (model) {\n            languageId = model.getLanguageId();\n        }\n    }\n    // only take if the language id is specific (aka no just plain text)\n    if (languageId && languageId !== PLAINTEXT_LANGUAGE_ID) {\n        return languageId;\n    }\n    // otherwise fallback to path based detection\n    return languageService.guessLanguageIdByFilepathOrFirstLine(resource);\n}\nfunction cssEscape(str) {\n    return str.replace(/[\\s]/g, '/'); // HTML class names can not contain certain whitespace characters (https://dom.spec.whatwg.org/#interface-domtokenlist), use / instead, which doesn't exist in file names.\n}\n","//#endregion\n//#region Utilities\nexport var FileKind;\n(function (FileKind) {\n    FileKind[FileKind[\"FILE\"] = 0] = \"FILE\";\n    FileKind[FileKind[\"FOLDER\"] = 1] = \"FOLDER\";\n    FileKind[FileKind[\"ROOT_FOLDER\"] = 2] = \"ROOT_FOLDER\";\n})(FileKind || (FileKind = {}));\n//#endregion\n"],"names":["ThemeColor","ThemeIcon","obj","ThemeIconIdRegex","RegExp","asClassNameArray","icon","match","id","modifier","classNames","_regexFromString","str","name","tildeIndex","ti1","ti2","fileIconDirectoryRegex","getIconClasses","modelService","languageService","resource","fileKind","classes","metadata","cssEscape","dotSegments","i","detectedLanguageId","detectLanguageId","languageId","mime","model","FileKind"],"mappings":"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"}